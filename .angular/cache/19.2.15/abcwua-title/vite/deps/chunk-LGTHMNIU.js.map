{
  "version": 3,
  "sources": ["../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/generateRandomString.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeDecode.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeEncode.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deDupeAsyncFunction.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isTokenExpired.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deviceName/getDeviceName.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/Signer/DateUtils.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/bytesToString.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Encoder.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/cryptoSecureRandomInt.mjs", "../../../../../../node_modules/@aws-amplify/core/dist/esm/utils/WordArray.mjs"],
  "sourcesContent": ["import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateRandomString = length => {\n  const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const result = [];\n  const randomNums = new Uint8Array(length);\n  getCrypto().getRandomValues(randomNums);\n  for (const num of randomNums) {\n    result.push(STATE_CHARSET[num % STATE_CHARSET.length]);\n  }\n  return result.join('');\n};\nexport { generateRandomString };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeDecode(hex) {\n  const matchArr = hex.match(/.{2}/g) || [];\n  return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\nexport { urlSafeDecode };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeEncode(str) {\n  return str.split('').map(char => char.charCodeAt(0).toString(16).padStart(2, '0')).join('');\n}\nexport { urlSafeEncode };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = asyncFunction => {\n  let inflightPromise;\n  return async (...args) => {\n    if (inflightPromise) return inflightPromise;\n    inflightPromise = new Promise((resolve, reject) => {\n      asyncFunction(...args).then(result => {\n        resolve(result);\n      }).catch(error => {\n        reject(error);\n      }).finally(() => {\n        inflightPromise = undefined;\n      });\n    });\n    return inflightPromise;\n  };\n};\nexport { deDupeAsyncFunction };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTokenExpired({\n  expiresAt,\n  clockDrift,\n  tolerance = 5000\n}) {\n  const currentTime = Date.now();\n  return currentTime + clockDrift + tolerance > expiresAt;\n}\nexport { isTokenExpired };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nconst getDeviceName = async () => {\n  const {\n    userAgentData\n  } = navigator;\n  if (!userAgentData) return navigator.userAgent;\n  const {\n    platform = '',\n    platformVersion = '',\n    model = '',\n    architecture = '',\n    fullVersionList = []\n  } = await userAgentData.getHighEntropyValues(['platform', 'platformVersion', 'architecture', 'model', 'fullVersionList']);\n  const versionList = fullVersionList.map(v => `${v.brand}/${v.version}`).join(';');\n  const deviceName = [platform, platformVersion, architecture, model, platform, versionList].filter(value => value).join(' ');\n  return deviceName || navigator.userAgent;\n};\nexport { getDeviceName };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n/**\n * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nconst DateUtils = {\n  /**\n   * Milliseconds to offset the date to compensate for clock skew between device & services\n   */\n  clockOffset: 0,\n  getDateWithClockOffset() {\n    if (DateUtils.clockOffset) {\n      return new Date(new Date().getTime() + DateUtils.clockOffset);\n    } else {\n      return new Date();\n    }\n  },\n  /**\n   * @returns {number} Clock offset in milliseconds\n   */\n  getClockOffset() {\n    return DateUtils.clockOffset;\n  },\n  getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n    return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n  },\n  getDateFromHeaderString(header) {\n    const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n    return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n  },\n  isClockSkewed(serverDate) {\n    // API gateway permits client calls that are off by no more than Â±5 minutes\n    return Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS;\n  },\n  isClockSkewError(error) {\n    if (!error.response || !error.response.headers) {\n      return false;\n    }\n    const {\n      headers\n    } = error.response;\n    return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) && (headers.date || headers.Date));\n  },\n  /**\n   * @param {number} offset Clock offset in milliseconds\n   */\n  setClockOffset(offset) {\n    DateUtils.clockOffset = offset;\n  }\n};\nexport { DateUtils };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction bytesToString(input) {\n  return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\nexport { bytesToString };\n", "import { getBtoa } from '../../globalHelpers/index.mjs';\nimport { bytesToString } from './bytesToString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Encoder = {\n  /**\n   * Convert input to base64-encoded string\n   * @param input - string to convert to base64\n   * @param options - encoding options that can optionally produce a base64url string\n   * @returns base64-encoded string\n   */\n  convert(input, options = {\n    urlSafe: false,\n    skipPadding: false\n  }) {\n    const inputStr = typeof input === 'string' ? input : bytesToString(input);\n    let encodedStr = getBtoa()(inputStr);\n    // urlSafe char replacement and skipPadding options conform to the base64url spec\n    // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n    if (options.urlSafe) {\n      encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n    if (options.skipPadding) {\n      encodedStr = encodedStr.replace(/=/g, '');\n    }\n    return encodedStr;\n  }\n};\nexport { base64Encoder };\n", "import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nfunction cryptoSecureRandomInt() {\n  const crypto = getCrypto();\n  const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n  return randomResult;\n}\nexport { cryptoSecureRandomInt };\n", "import { cryptoSecureRandomInt } from './cryptoSecureRandomInt.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n  // Shortcuts\n  const {\n    words\n  } = wordArray;\n  const {\n    sigBytes\n  } = wordArray;\n  // Convert\n  const hexChars = [];\n  for (let i = 0; i < sigBytes; i++) {\n    const bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n    hexChars.push((bite >>> 4).toString(16));\n    hexChars.push((bite & 0x0f).toString(16));\n  }\n  return hexChars.join('');\n}\nclass WordArray {\n  constructor(words, sigBytes) {\n    this.words = [];\n    let Words = words;\n    Words = this.words = Words || [];\n    if (sigBytes !== undefined) {\n      this.sigBytes = sigBytes;\n    } else {\n      this.sigBytes = Words.length * 4;\n    }\n  }\n  random(nBytes) {\n    const words = [];\n    for (let i = 0; i < nBytes; i += 4) {\n      words.push(cryptoSecureRandomInt());\n    }\n    return new WordArray(words, nBytes);\n  }\n  toString() {\n    return hexStringify(this);\n  }\n}\nexport { WordArray };\n"],
  "mappings": "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",
  "names": []
}
